version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: casino-postgres
    environment:
      POSTGRES_DB: casino_game
      POSTGRES_USER: casino_user
      POSTGRES_PASSWORD: casino_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U casino_user -d casino_game"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - casino-network

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: casino-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@casino.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - casino-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: casino-backend
    environment:
      - DATABASE_URL=postgresql://casino_user:casino_password@postgres:5432/casino_game
      - PORT=8000
      - HOST=0.0.0.0
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://127.0.0.1:3001,http://frontend:3000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    networks:
      - casino-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: casino-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/frontend/node_modules
    networks:
      - casino-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: casino-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - casino-network
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  casino-network:
    driver: bridge
