import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from './ui/button';
import { Input } from './ui/input';
import { Label } from './ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { Separator } from './ui/separator';
import { Dice6, Users, Trophy, Heart, Diamond, Spade, Club, Shuffle, Crown, Star } from 'lucide-react';
export function RoomManager({ roomId, setRoomId, playerName, setPlayerName, onCreateRoom, onJoinRoom, error, isLoading }) {
    const [showJoinForm, setShowJoinForm] = useState(false);
    const generateRoomId = () => {
        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        let result = '';
        for (let i = 0; i < 6; i++) {
            result += chars.charAt(Math.floor(Math.random() * chars.length));
        }
        setRoomId(result);
    };
    const suitIcons = [
        { icon: Heart, color: 'text-red-500' },
        { icon: Diamond, color: 'text-red-500' },
        { icon: Spade, color: 'text-gray-800' },
        { icon: Club, color: 'text-gray-800' }
    ];
    return (_jsxs("div", { className: "min-h-screen bg-gradient-to-br from-emerald-900 via-green-800 to-teal-900 relative overflow-hidden", children: [_jsxs("div", { className: "absolute inset-0 opacity-10", children: [_jsx("div", { className: "absolute top-10 left-10 transform rotate-12", children: _jsx(Heart, { className: "w-20 h-20 text-red-300" }) }), _jsx("div", { className: "absolute top-32 right-16 transform -rotate-45", children: _jsx(Spade, { className: "w-16 h-16 text-gray-300" }) }), _jsx("div", { className: "absolute bottom-20 left-20 transform rotate-45", children: _jsx(Diamond, { className: "w-24 h-24 text-red-300" }) }), _jsx("div", { className: "absolute bottom-32 right-12 transform -rotate-12", children: _jsx(Club, { className: "w-18 h-18 text-gray-300" }) }), _jsx("div", { className: "absolute top-1/2 left-1/4 transform rotate-90", children: _jsx(Crown, { className: "w-14 h-14 text-yellow-300" }) }), _jsx("div", { className: "absolute top-1/3 right-1/3 transform -rotate-30", children: _jsx(Star, { className: "w-12 h-12 text-yellow-300" }) })] }), _jsx("div", { className: "relative z-10 flex items-center justify-center min-h-screen p-4", children: _jsxs("div", { className: "w-full max-w-4xl mx-auto", role: "main", children: [_jsxs("div", { className: "text-center mb-8", children: [_jsx("div", { className: "flex justify-center items-center mb-6", children: _jsxs("div", { className: "relative", children: [_jsx("div", { className: "absolute -inset-1 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full blur opacity-30" }), _jsx("div", { className: "relative bg-white rounded-full p-4 shadow-2xl", children: _jsx(Shuffle, { className: "w-12 h-12 text-emerald-600" }) })] }) }), _jsx("h1", { className: "text-5xl md:text-6xl font-bold text-white mb-4 tracking-tight", children: "Cassino Card Game" }), _jsx("div", { className: "text-red-500 mt-2", children: error }), _jsx("div", { className: "flex justify-center items-center space-x-2 mb-6", children: suitIcons.map((suit, index) => (_jsx(suit.icon, { className: `w-6 h-6 ${suit.color} opacity-80` }, index))) }), _jsxs("div", { className: "flex justify-center space-x-6 text-emerald-200 text-sm", children: [_jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(Users, { className: "w-4 h-4" }), _jsx("span", { children: "2 Players" })] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(Trophy, { className: "w-4 h-4" }), _jsx("span", { children: "11 Points to Win" })] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(Dice6, { className: "w-4 h-4" }), _jsx("span", { children: "Real-time Online" })] })] })] }), _jsxs("div", { className: "grid md:grid-cols-2 gap-8 mb-8", "data-testid": "room-manager", children: [_jsxs(Card, { className: "backdrop-blur-sm bg-white/95 shadow-2xl border-0", children: [_jsxs(CardHeader, { className: "text-center pb-4", children: [_jsx(CardTitle, { className: "text-2xl text-gray-800", children: "Start Playing" }), _jsx(CardDescription, { className: "text-gray-600", children: "Create a new room or join an existing game" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", role: "form", children: [_jsx(Label, { htmlFor: "playerName", className: "text-gray-700 font-medium", children: "Your Name" }), _jsx(Input, { id: "playerName", "data-testid": "player-name-input-create-test", type: "text", placeholder: "Enter your player name", value: playerName, onChange: (e) => setPlayerName(e.target.value), className: "bg-white border-gray-300 focus:border-emerald-500 focus:ring-emerald-500", maxLength: 20, "aria-label": "Player Name" })] }), _jsx(Separator, { className: "my-6" }), _jsxs("div", { className: "space-y-4", children: [_jsx(Button, { onClick: onCreateRoom, disabled: !playerName.trim() || isLoading, className: "w-full bg-gradient-to-r from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700 text-white font-medium py-3 text-lg shadow-lg transform hover:scale-[1.02] transition-all duration-200", size: "lg", "aria-label": isLoading ? "Creating" : "Create Room", "data-testid": "create-room-test", children: isLoading ? (_jsxs(_Fragment, { children: [_jsx(Shuffle, { className: "w-5 h-5 mr-2 animate-spin" }), "Creating Room..."] })) : (_jsxs(_Fragment, { children: [_jsx(Crown, { className: "w-5 h-5 mr-2" }), "Create New Game"] })) }), _jsx("div", { className: "text-center text-gray-500 text-sm", children: "or" }), !showJoinForm ? (_jsxs(Button, { onClick: () => setShowJoinForm(true), variant: "outline", className: "w-full border-emerald-600 text-emerald-700 hover:bg-emerald-50 font-medium py-3 text-lg", size: "lg", "aria-label": "Show Join Room Form", "data-testid": "show-join-form-test", children: [_jsx(Users, { className: "w-5 h-5 mr-2" }), "Join Existing Game"] })) : (_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex space-x-2", children: [_jsx("div", { className: "flex-1", children: _jsx(Input, { type: "text", placeholder: "Room Code (e.g., ABC123)", value: roomId, onChange: (e) => setRoomId(e.target.value.toUpperCase()), className: "bg-white border-gray-300 focus:border-emerald-500 focus:ring-emerald-500", maxLength: 6, "aria-label": "Room ID", "data-testid": "room-id-input-test" }) }), _jsx(Button, { onClick: generateRoomId, variant: "outline", size: "sm", className: "px-3 border-gray-300 text-gray-600 hover:bg-gray-50", "aria-label": "Generate", children: _jsx(Dice6, { className: "w-4 h-4" }) })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { onClick: onJoinRoom, disabled: !roomId.trim() || !playerName.trim() || isLoading, className: "flex-1 bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-700 text-white font-medium", "aria-label": isLoading ? "Joining" : "Join Room", "data-testid": "join-room-submit-test", children: isLoading ? (_jsxs(_Fragment, { children: [_jsx(Shuffle, { className: "w-4 h-4 mr-2 animate-spin" }), "Joining..."] })) : (_jsxs(_Fragment, { children: [_jsx(Users, { className: "w-4 h-4 mr-2" }), "Join Game"] })) }), _jsx(Button, { onClick: () => setShowJoinForm(false), variant: "outline", className: "border-gray-300 text-gray-600 hover:bg-gray-50", "aria-label": "Cancel", children: "Cancel" })] })] }))] }), error && (_jsx("div", { className: "p-3 bg-red-50 border border-red-200 rounded-lg", role: "alert", "aria-live": "assertive", children: _jsx("p", { className: "text-red-700 text-sm font-medium", children: error }) }))] })] }), _jsxs(Card, { className: "backdrop-blur-sm bg-white/95 shadow-2xl border-0", children: [_jsxs(CardHeader, { className: "pb-4", children: [_jsxs(CardTitle, { className: "text-2xl text-gray-800 flex items-center", children: [_jsx(Star, { className: "w-6 h-6 mr-2 text-yellow-500" }), "How to Play"] }), _jsx(CardDescription, { className: "text-gray-600", children: "Master the art of card capturing" })] }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "bg-gradient-to-br from-yellow-50 to-orange-50 rounded-lg p-4", children: [_jsxs("h4", { className: "font-bold text-gray-800 mb-3 flex items-center", children: [_jsx(Trophy, { className: "w-5 h-5 mr-2 text-yellow-600" }), "Scoring (11 Points Total)"] }), _jsxs("div", { className: "space-y-2 text-sm text-gray-700", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("span", { className: "flex items-center", children: [_jsx(Badge, { variant: "secondary", className: "mr-2 bg-red-100 text-red-800", children: "A" }), "Each Ace"] }), _jsx(Badge, { className: "bg-yellow-500 text-white", children: "1 pt" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("span", { className: "flex items-center", children: [_jsx(Badge, { variant: "secondary", className: "mr-2 bg-gray-100 text-gray-800", children: "2\u2660" }), "Two of Spades"] }), _jsx(Badge, { className: "bg-yellow-500 text-white", children: "1 pt" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("span", { className: "flex items-center", children: [_jsx(Badge, { variant: "secondary", className: "mr-2 bg-red-100 text-red-800", children: "10\u2666" }), "Ten of Diamonds"] }), _jsx(Badge, { className: "bg-yellow-500 text-white", children: "2 pts" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { children: "Most Cards Captured" }), _jsx(Badge, { className: "bg-yellow-500 text-white", children: "2 pts" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { children: "Most Spades Captured" }), _jsx(Badge, { className: "bg-yellow-500 text-white", children: "2 pts" })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-emerald-50 to-teal-50 rounded-lg p-4", children: [_jsxs("h4", { className: "font-bold text-gray-800 mb-3 flex items-center", children: [_jsx(Shuffle, { className: "w-5 h-5 mr-2 text-emerald-600" }), "Gameplay"] }), _jsxs("div", { className: "space-y-2 text-sm text-gray-700", children: [_jsxs("p", { children: [_jsx("strong", { children: "Capture:" }), " Match your card value with table cards"] }), _jsxs("p", { children: [_jsx("strong", { children: "Build:" }), " Combine table cards to create a sum you can capture"] }), _jsxs("p", { children: [_jsx("strong", { children: "Trail:" }), " Place a card on the table when you can't capture"] }), _jsx("div", { className: "mt-3 p-2 bg-orange-100 rounded-md border-l-4 border-orange-400", children: _jsx("p", { className: "text-orange-800 font-medium", children: "\u26A0\uFE0F Important: You can only build values that you have cards in hand to capture!" }) })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-2 text-xs", children: [_jsxs("div", { className: "bg-blue-50 rounded-lg p-2 text-center", children: [_jsx("div", { className: "text-blue-600 font-medium", children: "Real-time" }), _jsx("div", { className: "text-blue-500", children: "Multiplayer" })] }), _jsxs("div", { className: "bg-purple-50 rounded-lg p-2 text-center", children: [_jsx("div", { className: "text-purple-600 font-medium", children: "Smart" }), _jsx("div", { className: "text-purple-500", children: "Hints System" })] }), _jsxs("div", { className: "bg-green-50 rounded-lg p-2 text-center", children: [_jsx("div", { className: "text-green-600 font-medium", children: "Sound" }), _jsx("div", { className: "text-green-500", children: "Effects" })] }), _jsxs("div", { className: "bg-orange-50 rounded-lg p-2 text-center", children: [_jsx("div", { className: "text-orange-600 font-medium", children: "Game" }), _jsx("div", { className: "text-orange-500", children: "Statistics" })] })] })] })] })] }), _jsx("div", { className: "text-center text-emerald-200", children: _jsxs("p", { className: "text-sm", children: ["Powered by ", _jsx("span", { className: "font-medium text-white", children: "KhasinoGaming" }), " \u2022", _jsx("span", { className: "mx-2", children: "\u2660\uFE0F \u2665\uFE0F \u2666\uFE0F \u2663\uFE0F" }), " \u2022 Play responsibly"] }) })] }) })] }));
}
