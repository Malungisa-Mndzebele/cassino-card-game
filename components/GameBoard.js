import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card } from './Card';
import { Button } from './ui/button';
export function GameBoard({ playedCards, deckCount, onDrawCard, canDraw }) {
    const lastPlayedCard = playedCards[playedCards.length - 1];
    return (_jsx("div", { className: "bg-green-700 rounded-lg p-6 mb-6 shadow-lg", children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "mb-2", children: _jsx("div", { className: "w-20 h-28 bg-blue-800 border-2 border-blue-900 rounded-lg flex items-center justify-center cursor-pointer hover:bg-blue-700 transition-colors", onClick: canDraw ? onDrawCard : undefined, children: _jsx("div", { className: "text-white text-2xl", children: "\uD83C\uDCA0" }) }) }), _jsxs("div", { className: "text-white text-sm font-medium", children: ["Deck (", deckCount, ")"] }), canDraw && (_jsx(Button, { onClick: onDrawCard, size: "sm", className: "mt-2", children: "Draw Card" }))] }), _jsxs("div", { className: "flex-1 mx-8", children: [_jsx("h3", { className: "text-white text-center mb-4 font-semibold", children: "Played Cards" }), _jsx("div", { className: "min-h-32 bg-green-600 rounded-lg border-2 border-dashed border-green-500 flex items-center justify-center", children: lastPlayedCard ? (_jsxs("div", { className: "text-center", children: [_jsx(Card, { suit: lastPlayedCard.suit, rank: lastPlayedCard.rank, id: lastPlayedCard.id, size: "large" }), _jsxs("p", { className: "text-white text-sm mt-2", children: ["Played by Player ", lastPlayedCard.playedBy] })] })) : (_jsx("p", { className: "text-green-300 text-center", children: "No cards played yet" })) }), playedCards.length > 1 && (_jsx("div", { className: "mt-2 text-center", children: _jsxs("p", { className: "text-white text-sm", children: [playedCards.length, " cards played total"] }) }))] }), _jsx("div", { className: "text-center text-white", children: _jsxs("div", { className: "bg-green-600 rounded-lg p-3", children: [_jsx("p", { className: "text-sm font-medium", children: "Game Status" }), _jsxs("p", { className: "text-xs mt-1 opacity-90", children: ["Cards in play: ", playedCards.length] }), _jsxs("p", { className: "text-xs opacity-90", children: ["Deck remaining: ", deckCount] })] }) })] }) }));
}
