name: Deploy Casino Game with Backend (DISABLED)

on:
  push:
    branches: [ never ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Create backend package
      run: |
        mkdir -p backend-deploy
        cp -r backend/* backend-deploy/
        cp backend/requirements.txt backend-deploy/
        
        # Create startup script
        echo '#!/usr/bin/env python3' > backend-deploy/start_backend.py
        echo 'import os, sys, subprocess' >> backend-deploy/start_backend.py
        echo 'os.chdir(os.path.dirname(__file__))' >> backend-deploy/start_backend.py
        echo 'subprocess.run([sys.executable, "-m", "pip", "install", "--user", "-r", "requirements.txt"])' >> backend-deploy/start_backend.py
        echo 'subprocess.run([sys.executable, "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"])' >> backend-deploy/start_backend.py
        
        chmod +x backend-deploy/start_backend.py
        
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-files
        path: backend-deploy/
        retention-days: 1

  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: https://khasinogaming.com:8000
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 1

  deploy-backend-ssh:
    needs: [deploy-backend]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-files
        path: backend-deploy/
        
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
    - name: Deploy backend via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key_path: ~/.ssh/id_rsa
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: 22
        timeout: 60s
        command_timeout: 15m
        script: |
          echo "üîß Starting backend deployment..."
          mkdir -p ~/casino-backend
          cd ~/casino-backend
          echo "üìÅ Directory created: $(pwd)"
          
          echo "üõë Stopping existing backend processes..."
          pkill -f "uvicorn main:app" || echo "No existing processes found"
          
          echo "üì¶ Installing Python dependencies..."
          pip3 install --user -r requirements.txt
          
          echo "üöÄ Starting backend server..."
          nohup python3 start_backend.py > backend.log 2>&1 &
          
          echo "‚è≥ Waiting for backend to start..."
          sleep 10
          
          if pgrep -f "uvicorn main:app" > /dev/null; then
            echo "‚úÖ Backend is running successfully"
            echo "üìä Process info:"
            ps aux | grep uvicorn
            echo "üìã Log file contents:"
            cat backend.log 2>/dev/null || echo "No log file found"
          else
            echo "‚ùå Backend failed to start"
            echo "üìã Log file contents:"
            cat backend.log 2>/dev/null || echo "No log file found"
            echo "üîç Checking Python processes:"
            ps aux | grep python
            exit 1
          fi

  deploy-frontend:
    needs: [deploy-backend-ssh, build-frontend]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
        
    - name: Deploy to Spaceship hosting via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
        dangerous-clean-slate: true
      continue-on-error: true
        
    - name: Verify deployment
      run: |
        echo "üéä Full deployment completed successfully!"
        echo "Backend: https://khasinogaming.com:8000"
        echo "Frontend: https://khasinogaming.com/"
        echo "Game: https://khasinogaming.com/cassino/"
