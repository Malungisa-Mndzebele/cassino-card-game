name: Deploy Full App via FTP

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install frontend dependencies
      run: npm ci
      
    - name: Prepare frontend files
      run: |
        echo "üìÅ Preparing frontend files for deployment..."
        # Create deployment directory
        mkdir -p dist
        # Copy all frontend files
        cp index.html dist/
        cp App.js dist/
        cp dev-server.js dist/
        cp -r public dist/
        cp -r frontend dist/
        cp package.json dist/
        cp package-lock.json dist/
        echo "‚úÖ Frontend files prepared"
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create backend package
      run: |
        echo "üì¶ Creating backend deployment package..."
        mkdir -p backend-deploy
        cp -r backend/* backend-deploy/
        
        # Create startup script for native deployment
        echo '#!/usr/bin/env python3' > backend-deploy/start.py
        echo 'import os, sys, subprocess' >> backend-deploy/start.py
        echo 'print("üì¶ Installing dependencies...")' >> backend-deploy/start.py
        echo 'subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])' >> backend-deploy/start.py
        echo 'print("üöÄ Starting backend server...")' >> backend-deploy/start.py
        echo 'subprocess.run([sys.executable, "start_production.py"])' >> backend-deploy/start.py
        
        # Create README
        echo '# Casino Backend - Native Deployment' > backend-deploy/README.md
        echo 'Run: python3 start.py' >> backend-deploy/README.md
        echo 'Or: python3 start_production.py' >> backend-deploy/README.md
        echo "‚úÖ Backend package created"
        
    - name: Deploy frontend via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: ./
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
        dangerous-clean-slate: true
      continue-on-error: true
        
    - name: Deploy backend via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./backend-deploy/
        server-dir: ./backend/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.DS_Store
          **/Thumbs.db
        dangerous-clean-slate: true
      continue-on-error: true
        
    - name: Success message
      run: |
        echo "üéä Full deployment completed via FTP!"
        echo ""
        echo "‚úÖ Frontend deployed to: ./ (current directory)"
        echo "‚úÖ Backend deployed to: ./backend/"
        echo ""
        echo "üåê Frontend: https://khasinogaming.com/cassino/"
        echo "üéÆ Game: https://khasinogaming.com/cassino/"
        echo ""
        echo "üìã Next steps for backend:"
        echo "1. SSH into your server"
        echo "2. Navigate to: cd backend/"
        echo "3. Run: python3 start.py"
        echo "4. Backend will be available on port 8000"
